import { useState, useEffect } from "react";
import axios from 'axios'
import ConfettiExplosion from 'react-confetti-explosion';
import { BsFillCameraFill, BsCloudUploadFill, BsFillTrash3Fill } from 'react-icons/bs'

document.body.style = 'background: #8da98b;';

export default function UploadImage() {
    const [state, setState] = useState({
        selectedImage: null,
        imageAsFile: null,
        imageResult: null,
    })

    // green, black (landfill), yellow (clean paper), blue (recycle)

    const handleFileSelect = (event) => {
        // console.log(event.target.files[0])

        setState({
            selectedImage: URL.createObjectURL(event.target.files[0]),
            imageAsFile: event.target.files[0]
        });
    };

    const handleUpload = (event) => {
        event.preventDefault();

        const reader = new FileReader();
        reader.readAsDataURL(state.imageAsFile)

        reader.onload = () => {
            const base64Image = reader.result;

            axios
                .post("http://127.0.0.1:5000/", 
                JSON.stringify(base64Image)
                , {
                    headers: {
                        "Content-Type": "application/json; charset=UTF-8",
                    },
                })
                .then((res) => {
                    console.log('res', res)
                    setState(prev => ({ ...prev, imageResult: res.data }))
                    document.querySelector("input[type='file']").value = "";
                    state.submitted(true);
                })
                .catch((err) => {
                    console.log(err);
                });


        }


    };

    return (
        <div className="image-upload-cont">

            {state.imageResult && (
                <ConfettiExplosion
                    x={0}
                    y={0}
                    particleCount={500}
                    blastOpacity={0.9}
                    colors={['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722']}
                />
            )}

            <div className={`upload-info ${state.imageResult}`}>
                {state.imageResult ? (
                    state.imageResult === "blue" ? "RECYCLABLE" :
                        state.imageResult === "green" ? "COMPOSTABLE" :
                            state.imageResult === "black" ? "LANDFILL" :
                                state.imageResult === "yellow" ? "PAPER" :
                                    null
                ) : (
                <>
                  <BsFillTrash3Fill size={30} style={{ marginRight: '10px' }} /> 
                  {'BinIt!'}
                </>
                )}
            </div>

            <div className="image-with-buttons">

                <div className="image-cont">
                    {state.selectedImage ? (
                        <img
                            className="uploaded-image"
                            src={state.selectedImage}
                        />
                    ) : (
                    <>                        
                      <svg fill="#ffffff" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title></title> <g id="green_earth"> <path d="M495.29,174.64H446.81A206.29,206.29,0,0,0,427,138.58q-5.08-7.38-10.74-14.22c3.71-8.18,5.15-18.47,4.26-30.77A7,7,0,0,0,414,87.11c-12.68-.91-23.21.64-31.5,4.62a207.7,207.7,0,0,0-74.21-36.38,74.78,74.78,0,0,0,1.29-21.76,7,7,0,0,0-6.48-6.48c-19.88-1.43-34.5,3.19-43.46,13.73A34.07,34.07,0,0,0,256,46a34.07,34.07,0,0,0-3.64-5.19c-9-10.54-23.57-15.16-43.46-13.73a7,7,0,0,0-6.48,6.48,74.34,74.34,0,0,0,1.28,21.69q-9,2.32-17.7,5.45a208.55,208.55,0,0,0-61.69,35.11c-9-7-21.82-9.91-38.21-8.73a7,7,0,0,0-6.48,6.48c-1.23,17,2,30.14,9.53,39.2A207.57,207.57,0,0,0,75.47,358.12a207.84,207.84,0,0,0,32,42.56H84.38a24.22,24.22,0,0,0-24.19,24.19A10.19,10.19,0,0,1,50,435.06H15.41a7,7,0,0,0,0,14H50a24.21,24.21,0,0,0,24.18-24.19,10.2,10.2,0,0,1,10.19-10.19h38.1a206.81,206.81,0,0,0,133,48.71H256a205.64,205.64,0,0,0,148.51-62.66,208.12,208.12,0,0,0,21.19-25.53A207.79,207.79,0,0,0,452.2,188.64h43.09a7,7,0,1,0,0-14Zm-97.54-48.3c-6.87,5.88-16.54,6.15-22.18,5.69-.45-5.63-.18-15.28,5.63-22.12,5.07-6,13.64-9,25.54-9C406.68,112.72,403.66,121.27,397.75,126.34ZM270.3,49.91c5.07-6,13.64-9,25.54-9-.06,11.86-3.08,20.42-9,25.48C280,72.22,270.31,72.5,264.67,72,264.22,66.4,264.49,56.75,270.3,49.91Zm-28.65-.06c5.88,6.87,6.15,16.55,5.68,22.18-5.64.46-15.31.19-22.18-5.69-5.91-5.06-8.93-13.62-9-25.48C228,40.92,236.58,43.93,241.65,49.85Zm-68.61,51c-.06,11.86-3.07,20.41-9,25.48-6.87,5.89-16.55,6.15-22.18,5.69-.46-5.64-.2-15.31,5.68-22.18C152.62,103.93,161.18,100.91,173,100.86Zm-54.19,9c5.88,6.86,6.15,16.54,5.69,22.17-5.63.46-15.29.19-22.13-5.63-6-5.06-9-13.64-9-25.53C105.22,100.92,113.78,103.93,118.85,109.85Zm-2,197.91a35.42,35.42,0,0,1,.31,4.75,36.33,36.33,0,0,1-31.1,35.8A193.72,193.72,0,0,1,74.56,189a50.22,50.22,0,0,1,53.15,79.25h0A53.37,53.37,0,0,0,116.86,307.76ZM266.63,449.1c0-.75,0-1.33,0-1.63a29.72,29.72,0,0,1,29.68-29.7c11.65,0,20.07,6.4,25.09,11.78a47.51,47.51,0,0,1,5.15,6.64A192.47,192.47,0,0,1,266.63,449.1ZM449.38,256.53a192.09,192.09,0,0,1-35.12,110.61,194.85,194.85,0,0,1-76.53,64.26,59.34,59.34,0,0,0-7.54-10c-9.39-10.05-21.41-15.59-33.86-15.59a41.74,41.74,0,0,0-41.68,41.7c0,.33,0,1,0,1.9A193.14,193.14,0,0,1,157,422.16q-5.91-3.54-11.53-7.48h24.95a7,7,0,1,0,0-14h-42.7A194.33,194.33,0,0,1,92.5,359.26a48.18,48.18,0,0,0,36.26-53.06,41.28,41.28,0,0,1,8.41-30.6,62.23,62.23,0,0,0-52-100.45c-1.71.08-3.41.24-5.1.46a190.67,190.67,0,0,1,20-34.06A46,46,0,0,0,121,146.17c1.33,0,2.58,0,3.74-.12v24.18a7,7,0,0,0,14,0V145.78a57.86,57.86,0,0,0,6.77.39c8,0,18.86-1.68,27.6-9.11,10.54-9,15.16-23.59,13.72-43.47a7,7,0,0,0-6.47-6.48,76.81,76.81,0,0,0-20.15.94,191.73,191.73,0,0,1,30.56-14.14c5.95-2.14,12-4,18.12-5.49a35,35,0,0,0,7.3,8.64c8.74,7.43,19.57,9.11,27.61,9.11,1.93,0,3.71-.09,5.25-.23v24.29a7,7,0,1,0,14,0V85.94c1.54.14,3.32.23,5.25.23,8,0,18.87-1.68,27.61-9.11a35.22,35.22,0,0,0,7.26-8.57,193.7,193.7,0,0,1,67.74,32l-.32.36A34.07,34.07,0,0,0,366.9,106a34.07,34.07,0,0,0-3.64-5.19c-9-10.54-23.58-15.16-43.46-13.73a7,7,0,0,0-6.48,6.48c-1.44,19.88,3.18,34.51,13.72,43.47,8.74,7.43,19.57,9.11,27.6,9.11,1.87,0,3.57-.09,5.07-.22v24.28a7,7,0,0,0,14,0V145.92c1.59.15,3.43.25,5.44.25,8,0,18.87-1.68,27.61-9.11.34-.29.66-.6,1-.91,2.66,3.36,5.23,6.81,7.67,10.37a192.5,192.5,0,0,1,16.07,28.12H409.25a24.21,24.21,0,0,0-24.18,24.18A10.2,10.2,0,0,1,374.88,209h-34.6a7,7,0,0,0,0,14h34.6a24.22,24.22,0,0,0,24.19-24.19,10.2,10.2,0,0,1,10.18-10.18h28.09A193.13,193.13,0,0,1,449.38,256.53ZM358.23,132c-5.64.46-15.31.19-22.18-5.69-5.92-5.07-8.93-13.62-9-25.48,11.86.06,20.42,3.07,25.49,9C358.43,116.72,358.7,126.4,358.23,132Z"></path> <path d="M315.83,251.66a28.11,28.11,0,0,0-28.08,28.07,8,8,0,0,0,16,0,12.08,12.08,0,0,1,24.15,0,8,8,0,0,0,16,0A28.1,28.1,0,0,0,315.83,251.66Z"></path> <path d="M287.69,312.54a8,8,0,0,0-8,8,27.11,27.11,0,1,1-54.22,0,8,8,0,0,0-16,0,43.11,43.11,0,1,0,86.22,0A8,8,0,0,0,287.69,312.54Z"></path> <path d="M217.63,279.73a28.08,28.08,0,0,0-56.15,0,8,8,0,0,0,16,0,12.08,12.08,0,0,1,24.15,0,8,8,0,0,0,16,0Z"></path> <path d="M467.25,456.66h0C456,452,453.62,449.61,449,438.37a10.5,10.5,0,0,0-19.4,0c-4.66,11.24-7.05,13.63-18.29,18.29a10.5,10.5,0,0,0,0,19.4c11,4.55,13.73,7.29,18.28,18.28a10.5,10.5,0,0,0,19.41,0c4.55-11,7.29-13.74,18.28-18.29a10.5,10.5,0,0,0,0-19.4Zm-28,29.89c-4.8-10.53-9.66-15.39-20.19-20.19,10.64-4.82,15.36-9.54,20.19-20.19,4.82,10.65,9.54,15.37,20.19,20.19C448.93,471.16,444.06,476,439.27,486.55Z"></path> <path d="M27.63,59.94c11,4.55,13.73,7.28,18.28,18.28a10.5,10.5,0,0,0,19.4,0c4.56-11,7.29-13.73,18.29-18.28a10.51,10.51,0,0,0,0-19.41h0c-11.24-4.65-13.63-7-18.28-18.28a10.51,10.51,0,0,0-19.41,0c-4.65,11.24-7,13.63-18.28,18.28a10.51,10.51,0,0,0,0,19.41Zm28-29.89C60.44,40.7,65.16,45.41,75.8,50.24,65.27,55,60.41,59.9,55.61,70.43,50.82,59.9,46,55,35.42,50.24,46.07,45.41,50.79,40.7,55.61,30.05Z"></path> </g> </g></svg>
                    </>
                    )}
                </div>

                <form className="edit-form-upload" onSubmit={handleUpload}>
                    <label className="button upload-label" for="inputTag">
                        <BsFillCameraFill size={40}/>
                        <input
                            id="inputTag"
                            className="choose-image"
                            type="file"
                            name="image"
                            onChange={handleFileSelect}
                            accept="image/*"
                        />
                    </label>
                    <button
                        className="button upload-image"
                        type="button"
                        onClick={handleUpload}
                    >
                        <BsCloudUploadFill size={40}/>
                    </button>
                </form>

            </div>

        </div>
    )
}